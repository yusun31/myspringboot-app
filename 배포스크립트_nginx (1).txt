docker network create --driver bridge msanet

mkdir -p /work/test3/nginx/conf
mkdir -p /work/test3/nginx/log

cat <<EOF | sudo tee /work/test3/nginx/conf/nginx.conf

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;
    
# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
        
    upstream backend {
    server mywas:8000;
    }

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /usr/share/nginx/html/;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
        proxy_pass http://backend;
        proxy_set_header X-Forwarded-Port \$server_port;
        proxy_set_header X-Forwarded-Host \$host;
        }

        error_page 404 /404.html;
        location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
}
EOF

mkdir -p /work/test3/db/conf

cat <<EOF | sudo tee /work/test3/db/conf/my.cnf
[client]
default-character-set = utf8mb4

[mysql]
default-character-set = utf8mb4

[mysqld]
character-set-client-handshake = FALSE
character-set-server           = utf8mb4
collation-server               = utf8mb4_unicode_ci
EOF


docker run --name mysql-svc -d --net msanet --net-alias=mysql-svc \
-v /work/test3/db/conf:/conf.d/etc/mysql/conf.d \
-e MYSQL_ROOT_PASSWORD='mysqlroot' \
-e MYSQL_DATABASE='boot_db' \
-e MYSQL_USER='boot' \
-e MYSQL_PASSWORD='boot' \
-e MYSQL_ROOT_HOST='%' \
mariadb:10.3


docker run --name mywas -d -p 8080:8080 --net msanet --net-alias=mywas yousun2286/springbootreactjs:latest

docker run --name myweb -d -p 80:80 -v /work/test3/nginx/conf:/etc/nginx/ -v /work/test3/nginx/log:/var/log/nginx --net msanet nginx

#docker run --name myweb -d -p 80:80 --net msanet vega2k/springbootreactjs:react